<?php

namespace Tests\Unit;

use App\Article;
use App\Repository\ArticleRepository;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class ArticleRepositoryTest extends TestCase
{
    /**
     * A basic unit test example.
     *
     * @return void
     */
    protected $repository = null;

    protected function seedData()
    {
        for($i=1;$i<=100;$i++){
            Article::create([
                'title' => 'title ' . $i,
                'body' => 'body ' . $i,
            ]);
        }
    }

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->seedData();

        // 建立要測試用的 repository
        $this->repository = new ArticleRepository();
    }

    public function tearDown(): void
    {
        $this->repository = null;
    }

//    public function testFetchLatest10Articles()
//    {
//        // 從 repository 中取得最新 10 筆文章
//        $articles = $this->repository->latest10();
//        $this->assertEquals(10, count($articles));
//
//        // 確認標題是從 100 .. 91 倒數
//        // "title 100" .. "title 91"
//        $i = 100;
//        foreach ($articles as $article) {
//            $this->assertEquals('title ' . $i, $article->title);
//            $i -= 1;
//        }
//    }

    public function testCreateArticle()
    {
        // 因為前面有 100 筆了，
        // 所以這裡我們可以預測新增後的 id 是 101
        $latestId = 101;

        $article = $this->repository->create([
            'title' => 'title ' . $latestId,
            'body'  => 'body ' . $latestId,
        ]);

        $this->assertEquals(101, $article->id);
    }
}
